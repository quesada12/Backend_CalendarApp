{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","localStorage","getItem","types","login","user","type","payload","checkingFinish","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","respuesta","json","ok","setItem","token","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvent","events","map","event","start","moment","toDate","end","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiopenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initialForm","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","resp","console","log","getState","evento","_id","startAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","components","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","path","exact","initialstate","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09351d16.chunk.js","sourcesContent":["\nconst baseURL = process.env.REACT_APP_API_URL\n\n\nexport const fetchSinToken = (endpoint, data, method='GET') => {\n\n    const url = `${baseURL}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    }else{\n        return fetch(url,{\n            method,\n            headers: {\n                'Content-type':\"application/json\",\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\n\nexport const fetchConToken = (endpoint, data, method='GET') => {\n\n    const url = `${baseURL}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url,{\n            method,\n            headers: {\n                'x-token':localStorage.getItem('token') || '',\n            }\n        });\n    }else{\n        return fetch(url,{\n            method,\n            headers: {\n                'Content-type':\"application/json\",\n                'x-token': localStorage.getItem('token') || ''\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\n\n","export const types = {\n\n    uiOpenModal: '[UI] Open Modal',\n    uiCloseModal: '[UI] Close Modal',\n\n    eventAddNew: '[Event] Add new',\n    eventSetActive: '[Event] Set active',\n    eventClearActiveEvent: '[Event] Clear Active Event',\n    eventUpdated: '[Event] Event updated',\n    eventDeleted: '[Event] Event deleted',\n    eventLoaded: '[Event] Events Loaded',\n    eventLogout : '[Event] Events logout',\n\n\n    authCheckingFinish: '[Auth] Finish login state',\n    // authStartLogin: '[Auth] Start login',\n    authLogin: '[Auth] Login',\n    // authStartRegister: '[Auth] Start Register',\n    // authStartTokenRenew: '[Auth] Start Token Renew',\n    authLogout: '[Auth] Logout',\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n\n        const respuesta = await fetchSinToken('auth',{email, password},'POST');\n        const body = await respuesta.json();\n        \n        if (body.ok) {\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error',body.msg, 'error');\n        }\n\n    }\n}\n\n\nexport const startRegister = (email,password,name) => {\n    return async(dispatch) => {\n\n        const respuesta = await fetchSinToken('auth/new',{name, email, password},'POST');\n        const body = await respuesta.json();\n        \n        if (body.ok) {\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error',body.msg, 'error');\n        }\n        \n\n    }\n}\n\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n\n        const respuesta = await fetchConToken('auth/renew');\n        const body = await respuesta.json();\n        \n        if (body.ok) {\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            dispatch(checkingFinish())\n        }\n\n    }\n}\n\n\nconst login = (user) => {\n    return {\n        type: types.authLogin,\n        payload: user\n    }\n}\n\nconst checkingFinish = () => {\n     return {\n         type: types.authCheckingFinish\n     }\n }\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        localStorage.clear();\n        dispatch(logout())\n    }\n}\n\nconst logout = () => {\n    return{\n        type: types.authLogout\n    }\n}","\n   \nimport { useState } from \"react\"\n\nexport const useForm = ( initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState)\n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name]:target.value\n        })\n    }\n\n    return [values, handleInputChange, reset];\n    \n}","\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n\n    // *********** LOGIN ******************************************************************\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'josue@gmail.com',\n        lPassword: '123456'\n    })\n\n    const {lEmail,lPassword} = formLoginValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail,lPassword));\n    }\n\n\n\n    // *********** REGISTER ******************************************************************\n\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'Antonio',\n        rEmail: 'antonio@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    })    \n\n    const {rName,rEmail, rPassword1, rPassword2} = formRegisterValues;\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error','Las contraseñas deben ser iguales','error');\n        }\n\n        dispatch(startRegister(rEmail,rPassword1,rName));\n\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='lEmail'\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name='lPassword'\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import moment from \"moment\"\n\nexport const prepareEvent = (events) => {\n \n    return events.map(event => ({\n        ...event,\n        start: moment(event.start).toDate(),\n        end: moment(event.end).toDate(),\n    }))\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvent } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const startAddNew = (event) =>{\n    return async(dispatch, getState) => {\n\n        const {uid, name} =getState().auth;\n        try {\n\n            const resp = await fetchConToken('events',event,'POST');\n            const body = await resp.json();\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew( event ))\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventAddNew = (event) => {\n    return {\n        type:types.eventAddNew,\n        payload:event\n    }\n}\n\nexport const eventSetActive = (event) => {\n    return {\n        type:types.eventSetActive,\n        payload:event\n    }\n}\n\nexport const eventClearActiveEvent = () => {\n    return{\n        type:types.eventClearActiveEvent\n    }\n}\n\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch)=>{\n        try {\n            \n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\n            const body = await resp.json();\n            \n            if (body.ok) {\n                dispatch(eventUpdated(event));\n                Swal.fire('Success','Evento actualizado','success');\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventUpdated = (event) => {\n    return{\n        type:types.eventUpdated,\n        payload: event\n    }\n}\n\n\nexport const eventStartDeleted = () => {\n    return async(dispatch,getState) => {\n        try {\n            const {activeEvent} = getState().calendar\n            const resp = await fetchConToken(`events/${activeEvent.id}`,{},'DELETE');\n            const body = await resp.json();\n            \n            if (body.ok) {\n                dispatch(eventDeleted());\n                Swal.fire('Success','Evento eliminado','success');\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nconst eventDeleted = () => {\n    return {\n        type: types.eventDeleted\n    }\n}\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken('events');\n        const body = await resp.json();\n\n        const events = prepareEvent(body.eventos) ;\n        dispatch(eventLoaded(events))\n\n    }\n}\n\nconst eventLoaded = (events) => {\n    return {\n        type: types.eventLoaded,\n        payload: events\n    }\n}\n\nexport const eventLogout = () => {\n    return {\n        type: types.eventLogout\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { eventLogout } from '../../actions/events';\n\nexport const Navbar = () => {\n\n    const {name} = useSelector( state => state.auth );\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n        dispatch(eventLogout())\n    }\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4 px-2\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    \n    const {title, user} = event;\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\nexport const uiopenModal = () => {\n    return{\n        type:types.uiOpenModal\n    }\n}\n\nexport const uicloseModal = () => {\n    return{\n        type:types.uiCloseModal\n    }\n}","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2'\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {uicloseModal} from '../../actions/ui'\nimport {  eventClearActiveEvent, eventStartUpdate, startAddNew } from '../../actions/events';\n\n//Centrar el modal\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n//linkearlo al index.js\nModal.setAppElement('#root');\n\n//Fecha Inicial\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\nconst nowPlus1 = now.clone().add('1','hours');\n\nconst initialForm = {\n    title:'',\n    notes :'',\n    start:now.toDate(),\n    end: nowPlus1.toDate(),\n}\n\n\n\nexport const CalendarModal = () => {\n\n    const {modalOpen} = useSelector( state => state.ui );\n    const {activeEvent} = useSelector( state => state.calendar );\n\n    const dispatch = useDispatch();\n\n    const [, setDateStart] = useState(now.toDate());\n    const [, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initialForm)\n\n    const {title,notes,start,end} =formValues;\n\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        }else{\n            setFormValues(initialForm)\n        }\n      \n    }, [activeEvent,setFormValues])\n\n\n\n    const handleInputChange = ({target}) => {\n        setFormValues({\n            ...formValues,\n            [target.name]:target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        //Cerrar el modal\n        dispatch(uicloseModal());\n        setFormValues(initialForm);\n        dispatch(eventClearActiveEvent());\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start:e\n        });\n    }\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end:e\n        });\n    }\n\n    const handleSubmitForm = e => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error','La fecha fin debe ser mayor a la fecha de inicio','error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        }else{\n            dispatch(startAddNew(formValues));\n        }\n        \n        setTitleValid(true);\n        closeModal();\n    }\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={200}\n        >\n            <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker \n                        onChange={ handleStartDateChange }\n                        value={ start}\n                        className=\"form-control\"\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker \n                        onChange={ handleEndDateChange }\n                        value={ end}\n                        className=\"form-control\"\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                        minDate={start}\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control  ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n                <div className=\"d-grid gap-2\">\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary btn-block\"\n                        \n                    >\n                        <i className=\"far fa-save\"></i>\n                        <span> Guardar</span>\n                    </button>\n\n                </div>\n\n            </form>\n\n        </Modal>\n    )\n}\n","\n// Obj con los textos personalizados para el Calendario\n\nexport const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { uiopenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(uiopenModal());\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClick}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleDelete = () => {\n        dispatch(eventStartDeleted())\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar Evento</span>\n            \n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navbar } from '../ui/Navbar'\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\n//importa el idioma de moment\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {uiopenModal} from '../../actions/ui'\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n//Cambio en el idioma de Moment\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    \n    const {events, activeEvent} = useSelector( state => state.calendar );\n    const {uid} = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n    }, [dispatch])\n\n\n    const onDoubleClick = (e) => {\n        dispatch(uiopenModal());\n    }\n\n    const onSelectEvent = (e) =>{\n        dispatch(eventSetActive(e));\n        \n    }\n\n    const onViewChange = (e) => {\n        //Para que se quede en la vista aun cuando se recargue el navegador\n        setLastView(e);\n        localStorage.setItem('lastView',e);\n    }\n\n    const onSelectSlot = e => {\n        dispatch(eventClearActiveEvent())\n    }\n\n    const eventStyleGetter = (event,start,end,isSelected) => {\n\n        \n        const style = {\n            backgroundColor:(uid === event.user._id) ? '#367CF7' : '#465660' ,\n            borderRadius:'0px',\n            opacity:0.8,\n            display:'block',\n            color:'white'\n        }\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar \n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter = {eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                view = {lastView}\n                components={{event: CalendarEvent}}\n                onSelectSlot={ onSelectSlot}\n                selectable= {true}\n            />\n\n\n            <CalendarModal />\n\n            <AddNewFab />\n\n\n           {\n           activeEvent &&\n                <DeleteEventFab />\n           }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n\n    return (\n        \n        <Route {...rest}\n            component={ (props) => (\n                (isAuthenticated) \n                    ? <Component {...props} />\n                    : <Redirect to='/login' />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        \n        <Route {...rest}\n            component={ (props) => (\n                (!isAuthenticated) \n                    ? <Component {...props} />\n                    : <Redirect to='/' />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n  \n    const dispatch = useDispatch();\n    const {checking,uid} = useSelector( state => state.auth );\n\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n    if (checking) {\n      return (<h5>Espere ...</h5>);\n    }\n\n\n\n    return (\n        <Router>\n          <div>\n            \n            <Switch>\n            {/* // El doble !! convierte el string en booleano si tiene info */}\n              <PublicRoute path=\"/login\" exact component={LoginScreen} isAuthenticated={!!uid}/> \n              <PrivateRoute path=\"/\" exact component={CalendarScreen} isAuthenticated={!!uid} />\n              <Redirect to=\"/\"/>\n              \n            </Switch>\n          </div>\n        </Router>\n      );\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state=initialState, action) =>{\n    switch (action.type) {\n       case types.authLogin:\n           return {\n               ...state,\n               checking: false,\n               ...action.payload\n           }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n}","\n// {\n//     id: '123231223',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name:'Josue'\n//     }\n// }\n\n\nimport { types } from \"../types/types\";\n\nconst initialstate = {\n\n    events: [],\n    activeEvent: null\n\n}\n\n\nexport const calendarReducer = (state = initialstate,action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return{\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return{\n                ...state,\n                events:[\n                    ...state.events,\n                    action.payload,\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return{\n                ...state,\n                activeEvent:null\n            }\n        case types.eventUpdated:\n            return{\n                ...state,\n                events: state.events.map(event => event.id === action.payload.id ? action.payload : event)\n            }\n        case types.eventDeleted:\n            return{\n                ...state,\n                events: state.events.filter(event => event.id !== state.activeEvent.id),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return{\n                ...state,\n                events: [ ...action.payload]\n            }\n        case types.eventLogout:\n            return{\n                ...initialstate\n            }\n        \n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    modalOpen : false\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen : true\n            };\n        case types.uiCloseModal:\n            return{\n                ...state,\n                modalOpen:false\n            }\n    \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui:uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n\n            <AppRouter />\n\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}